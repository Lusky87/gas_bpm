<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ include file="/hncis/include/common_sub.gas" %>
<%
	String menuId = "XUF06";

	String strReq = JSPMessageSource.getMessage("BUTTON.REQUEST", locale);
	String strAdd = JSPMessageSource.getMessage("BUTTON.ADD.ROW",locale);
	
	String strBtn = "";
	strBtn = strReq+"/request@"+strAdd+"/addRow";
	
	String tempPath     = request.getServletPath().toString();
	String stepHelpUrl  = StringUtil.getStepHelp(tempPath);
%>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>LIST</title>
	</head>
	<body>
		<div id="wrap">
	    	<form name="frm" id="frm">
	    		<input type="hidden" id="help_url" name="help_url" value="<%=stepHelpUrl%>">
	    		
		    	<%@ include file="../include/hncis_header.gas"%>
		        <div id="contents_wrap">
		        	<%@ include file="../include/hncis_left.gas"%>
		            <div id="contents">
		            	<%=CommonGasc.getTitleAndButtonNew(sess_empno
							,"XUF06" 
							,strBtn
							,null
							,null
							,null
							,request)
						%>
		                <div class="jq_tbl">
			                <table id="htmlTable" class="scroll"></table>
						</div>
		                <%@ include file="../include/hncis_message.gas"%>
		            </div>
		            <div class="clear"></div>
		        </div>
	        </form>
			<form id="hideForm" name="hideForm" method="post">
				<input type="hidden" id="M_DOC_NO" name="M_DOC_NO">
				<input type="hidden" id="hid_csrfToken"	name="hid_csrfToken">
			</form>
	    </div>
	</body>
</html>
		<script type="text/javascript">
		var multiComboVal;
		var gridName = "htmlTable";
		var gridParam;
		var clothesComboVal;
		var colorComboVal;
		var sizeComboVal;
		var qtyComboVal;
		var deptUnifTypeArr = [];
		  
		var datarow = {nSource:"",sex_cd:"",remain_qty:"",ops_cd:"",unif_type_cd:"",unif_clr_cd:"",eeno:"",eenm:"",poa_nm:"",ops_nm:"",unif_type_nm:"",unif_clr_nm:"",unif_msm_cd:"",quantity:"", hid_color:"", hid_size:"",hid_unif_type_cd:""};

		function fnSetDocumentReady(){
			initMenus();
			$('#UF').slideDown('fast');
			
			$(".inputOnlyNumber").numeric();
			
			getCommonCode("quantity:XUF02:Z;", "Y", "fnInitKeyCombo(jsonData.sendResult);");
		}

		function fnInitKeyCombo(tmpQtyComboVal){
			qtyComboVal = tmpQtyComboVal.quantity;
			getCommonCode("A:A:A", "N", "fnKeyCombo(jsonData.sendResult);", "/hncis/uniform/doSearchUniformMultiComboList.do");
		}

		function fnKeyCombo(result){
			multiComboVal = result;
			
			clothesComboVal = result.CLOTHES;
			colorComboVal   = result.COLOR;
			sizeComboVal    = result.SIZE;
			
			init();
		}

		function fnSetGridCombo(gubun, rowId, row){
			if(typeof(rowId) == 'undefined'){
				rowId = "";
			}
			
			var returnVal = "";
			var targetColNm = "";
			
			switch(gubun){
			case "type_cd" :
				targetColNm = "unif_type_cd";
				$.each(clothesComboVal, function(index, optionData){
					if(optionData.key == getColValue("ops_cd", rowId, gridName)){
						if(index > 0 && returnVal == ""){
							returnVal  = optionData.value + ":" + optionData.name;
						}else if(returnVal != ""){
							returnVal += ";" + optionData.value + ":" + optionData.name;
						}
					}
				});
				break;
			case "color_type" :
				targetColNm = "unif_clr_cd";
				$.each(colorComboVal, function(index, optionData){
					if( rowId != "" &&
						optionData.key == getColValue("unif_type_cd", rowId, gridName)){
						returnVal += "<option value='" + optionData.value + "'>" + optionData.name + "</option>";
					}
				});
				break;
			case "size_type" :
				targetColNm = "unif_msm_cd";
				$.each(sizeComboVal, function(index, optionData){
					if(rowId != "" && optionData.key == getColValue("unif_clr_cd", rowId, gridName)){
						returnVal += "<option value='" + optionData.value + "'>" + optionData.name + "</option>";
					}
				});
				break;
			}
			
			if(gubun == "type_cd"){
				return returnVal;
			}else{
				var orgSelect = $("#" + rowId + "_" + targetColNm)[0];
				var orgValue  = getColValue(targetColNm, rowId, gridName);
				$("select#" + rowId + "_" + targetColNm).html(returnVal);
				$(orgSelect).val(orgValue);
			}
		}

		function fnSetDefGridCombo(gubun){
			var returnVal = "";
			if(gubun == "type_cd"){
				$.each(clothesComboVal, function(index, optionData){
//					if(optionData.key == getColValue("ops_cd", rowId, gridName)){
						if(index > 0 && returnVal == ""){
							returnVal  = optionData.value + ":" + optionData.name;
						}else if(returnVal != ""){
							returnVal += ";" + optionData.value + ":" + optionData.name;
						}
//					}
				});
			}else if(gubun == "color_type"){
				$.each(colorComboVal, function(index, optionData){
					if(returnVal == "" && optionData.value != ""){
						returnVal  = optionData.value + ":" + optionData.name; 
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				});
			}else{
				$.each(sizeComboVal, function(index, optionData){
					if(returnVal == "" && optionData.value != ""){
						returnVal  = optionData.value + ":" + optionData.name; 
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				});
			}
			
			return returnVal;
		}

		function init(){
// 			cn = [ '', '', '', '', '', '', '사번', '이름', '직급', '부서', '근무복', '구분', '사이즈', '수량', '' ];
			var cn = [ '' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'<fmt:message key="eeno"/>' // "사번"
		          ,'<fmt:message key="eenm"/>' // "이름"
		          ,'<fmt:message key="position"/>' // "직급"
		          ,'<fmt:message key="dept_nm"/>' // "부서"
		          ,'<fmt:message key="uniform"/>' // "근무복"
		          ,'<fmt:message key="type"/>' // "구분"
		          ,'<fmt:message key="size"/>' // "사이즈"
		          ,'<fmt:message key="qty"/>' // "수량"
		          ,'' // "" 
		          ];
			cm = [
				{name:'nSource'       , index:'nSource'     , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'sex_cd'        , index:'sex_cd'      , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'remain_qty'    , index:'remain_qty'  , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'ops_cd'        , index:'ops_cd'      , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'hid_color'     , index:'hid_color'   , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'hid_size'      , index:'hid_size'    , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'eeno'          , index:'eeno'        , formatter:'string', width:60 , align:'center', editable:true , sortable:false,
					editoptions:{
						dataEvents:[
						    {type:"focus",
						    	fn:function(e){
						    		$(e.target).numeric();
						    	}
						    },
						    {type:"keyup",
						    	fn:function(e){
						    		var row = $(e.target).closest("tr.jqgrow");
						    		var rowId = row.attr("id");
						    		var cbs = $("#jqg_" + gridName + "_" + rowId);
						    		if(!cbs.is(":checked")){
						    			jQuery("#" + gridName).jqGrid("setSelection", rowId, true);
						    		}
						    		setInsaInfo(rowId);
						    	}
						    }
						]
					}
				},
				{name:'eenm'          , index:'eenm'        , formatter:'string', width:150, align:'left'  , editable:false, sortable:false},
				{name:'poa_nm'        , index:'poa_nm'      , formatter:'string', width:100, align:'center', editable:false, sortable:false},  
				{name:'ops_nm'        , index:'ops_nm'      , formatter:'string', width:110, align:'center', editable:false, sortable:false},
				{name:'unif_type_cd'  , index:'unif_type_cd', formatter:'select', width:175, align:'center', editable:true, sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetDefGridCombo("type_cd"),
						dataEvents:[
//						    {type:"focus",
//						    	fn:function(e){
//						    		var row = $(e.target).closest("tr.jqgrow");
//						    		var rowId = row.attr("id");
//						    		var cbs = $("#jqg_" + gridName + "_" + rowId);
//						    		if(!cbs.is(":checked")){
//						    			jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
//						    		}
//						    		$("#"+gridName).setCell(rowId,'hid_unif_type_cd',getColValue('unif_type_cd',rowId, gridName));
		//
//						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 0, "ops_cd:unif_type_cd", "multiComboVal:multiComboVal", "CLOTHES:COLOR");
//						    	}
//						    },
						    {type:"change",
						    	fn:function(e){
						    		var row = $(e.target).closest("tr.jqgrow");
						    		var rowId = row.attr("id");
						    		var cbs = $("#jqg_" + gridName + "_" + rowId);
						    		if(!cbs.is(":checked")){
						    			jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
						    		}
						    		$("#"+gridName).setCell(rowId,'hid_unif_type_cd',getColValue('unif_type_cd',rowId, gridName));

						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 2, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
						    		
						    	}
						    }
						]
					}
				},
				{name:'unif_clr_cd'   , index:'unif_clr_cd' , formatter:'select', width:160, align:'center', editable:true, sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetDefGridCombo("color_type"),
						dataEvents:[
							{type:'change', 
								fn:function(e){
									var row = $(e.target).closest('tr.jqgrow');
									var rowId = row.attr('id');
							        var cbs = jQuery("#jqg_"+gridName+"_"+rowId);
							        if(!cbs.is(":checked")){
							        	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
							        }
							        multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 2, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
						    		
						    		$("#htmlTable").setCell(rowId,'hid_color',getColValue("unif_clr_cd",rowId, gridName));
								}
						    }
						]
					}
				},
				{name:'unif_msm_cd'   , index:'unif_msm_cd' , formatter:'select', width:130 , align:'center', editable:true , sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetDefGridCombo("size_type"),
						dataEvents:[
						    {type:'change', 
								fn:function(e){
									var row = $(e.target).closest('tr.jqgrow');
									var rowId = row.attr('id');
			                        var cbs = jQuery("#jqg_"+gridName+"_"+rowId);
			                        if(!cbs.is(":checked")){
			                        	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
			                        }
			                        
			                        $("#htmlTable").setCell(rowId,'hid_size',getColValue("unif_msm_cd",rowId, gridName));
								}
						    }
						]
					}
				},
				{name:'quantity'      , index:'quantity'    , formatter:'select', width:55 , align:'center', editable:true , sortable:false,
					edittype:'select',editoptions:{value:getComboValue('quantity')}
				},
				{name:'hid_unif_type_cd'   , index:'hid_unif_type_cd'   , formatter:'string', width:150, align:'center', editable:false, sortable:false, hidden:true}
			];
			
			gridParam = {
				viewEdit : [{
					gridName     : "htmlTable",
					url          : "/doSearchToEmpty.do",
					colNames     : cn,
					colModel     : cm,
					height       : "100%",
					sortname     : "eeno",
					sortorder    : "desc",
					rowNum		 : 5,
					rownumbers   : true,
					multiselect  : true,
					cellEdit     : true,
					fnMerge      : false,
					selectCellFc : "selectRowMultiComboSetting(rowid, iCol);",
					completeFc   : "addGridRow();initAfterMenus();"
				}]
			};
			
			commonJqGridInit(gridParam, "N");
			
			$("#htmlTable").setColProp('eeno', {editoptions:{dataEvents:[{type:'keyup', 
				fn:function(e){
					var row = $(e.target).closest("tr.jqgrow");
		    		var rowId = row.attr("id");
		    		var cbs = $("#jqg_" + gridName + "_" + rowId);
		    		if(!cbs.is(":checked")){
		            	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
		    		}
		    		setInsaInfo(rowId);
				}
			}]
			}});
		}

		function selectRowMultiComboSetting(rowid, iCol){
			multiComboController(gridName, rowid, 0, "sex_cd:unif_type_cd", "multiComboVal:multiComboVal", "CLOTHES:CLOTHES", rowid);
//			multiComboController(gridName, rowid, 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowid);
//			multiComboController(gridName, rowid, 2, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowid);
		}

		function fnSetGridSizeCombo(){
			var returnVal = "";
			
			$.each(multiComboVal.SIZE, function(index, optionData){
				if(optionData.key == $("#key_unif_type_cd").val()){
					if(returnVal == ""){
						returnVal  = optionData.value + ":" + optionData.name;
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				}
			});
			
			return returnVal;
		}

		function retrieve(btnFlag){
			var f = document.frm;
			switch(btnFlag){
				case "request" :
				    doRequest();
					break;
				case "addRow" :
					fnAddRow();
					break;
			}
		}

		function doRequest(){
			var data;
			var iParams = [];
			
			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");
			
			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}
			
			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i])){ return; }
					data = {
						eeno            : getColValue("eeno"        , selectRow[i], gridName),
						unif_type_cd    : getColValue("unif_type_cd", selectRow[i], gridName),
						unif_clr_cd     : getColValue("hid_color"   , selectRow[i], gridName),
						unif_msm_cd     : getColValue("hid_size"    , selectRow[i], gridName),
//						unif_clr_cd     : getColValue("unif_clr_cd" , selectRow[i], gridName),
//						unif_msm_cd     : getColValue("unif_msm_cd" , selectRow[i], gridName),
						admin_yn        : "Y",
						unif_ptt_qty    : getColValue("quantity"    , selectRow[i], gridName),
						uaps1_cd        : "A",
						ipe_eeno        : sess_empno,
				        corp_cd			: sess_corp_cd
					};
					
//					alertUI(getColValue("unif_type_cd", selectRow[i], gridName)+":"+getColValue("hid_color"   , selectRow[i], gridName)+":"+getColValue("hid_size"    , selectRow[i], gridName));
					
					iParams.push(data);
				}
			}
			
			if(iParams.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}
			
			confirmUI('<fmt:message key="MSG.CNF.0005"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var params = {
								iParams : util.jsonToList(iParams)
							};
						doCommonAjax("doRequestListToRequest.do", params, "doRequestCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function doRequestCallBack(result){
			if(result.result == "Y"){
				$("#"+gridName).jqGrid("clearGridData", true).trigger("reloadGrid");
				addGridRow();
			}
			setBottomMsg(result.message, true);
		}

		function fnAddRow(){
			var gridRowId = $("#"+gridName).getDataIDs().length;
			$("#"+gridName).jqGrid("addRowData", parseInt(gridRowId, 10)+1, datarow);
		}

		function fnValidationChk(rowId){
			if(getColValue("eenm", rowId, gridName) == ""){
				alertUI('<fmt:message key="exc_req"/> ' + rowId + ' <fmt:message key="MSG.ROW.0045"/>');
				return false;
			}
			if(getColValue("unif_type_cd", rowId, gridName) == ""){
				alertUI('<fmt:message key="exc_req"/> ' + rowId + ' <fmt:message key="MSG.ROW.0045"/>');
				return false;
			}
			if(getColValue("unif_clr_cd", rowId, gridName) == ""){
				alertUI('<fmt:message key="exc_req"/> ' + rowId + ' <fmt:message key="MSG.ROW.0041"/>');
				return false;
			}
			if(getColValue("unif_msm_cd", rowId, gridName) == ""){
				alertUI('<fmt:message key="exc_req"/> ' + rowId + ' <fmt:message key="MSG.ROW.0042"/>');
				return false;
			}
			if(getColValue("quantity", rowId, gridName) == ""){
				alertUI('<fmt:message key="exc_req"/> ' + rowId + ' <fmt:message key="MSG.ROW.0043"/>');
				return false;
			}
			
			return true;
		}

		function setInsaInfo(rowId){
			if(getColValue("eeno", rowId, gridName) != ""){
				if(getColValue("eeno", rowId, gridName) == getColValue("nSource", rowId, gridName)){ return; }
				$("#"+gridName).jqGrid("setCell", rowId, "nSource", getColValue("eeno", rowId, gridName));
				
				var keyData = { xusr_empno : getColValue("eeno", rowId, gridName) };
				paramData = {
					paramJson : util.jsonToString(keyData)
				};
				doCommonAjax("/doSearchToUserInfo.do", paramData, "insaCallBack(jsonData.sendResult, '"+rowId+"')");
			}
		}

		function insaCallBack(result, rowId){
			$("#"+gridName).jqGrid("setCell", rowId, "eenm", result.xusr_name);
			$("#"+gridName).jqGrid("setCell", rowId, "poa_nm", result.xusr_step_name);
			$("#"+gridName).jqGrid("setCell", rowId, "ops_cd", result.xusr_dept_code);
			$("#"+gridName).jqGrid("setCell", rowId, "ops_nm", result.xusr_dept_name);
			$("#"+gridName).jqGrid("setCell", rowId, "sex_cd", result.xusr_sex);
			
			var comboValTemp="";
			deptUnifTypeArr = [];
			$.each(eval(clothesComboVal),function(index,optionData){
				if(result.xusr_sex == optionData.key || optionData.key == "3"){
					deptUnifTypeArr.push(optionData);
					comboValTemp += '<option role="option" value="' +
		            optionData.value + '">' +
					optionData.name + '</option>';
				}
			});
			
			$("select#" + rowId +"_"+ "unif_type_cd").html(comboValTemp);
			
//			multiComboController(gridName, rowId, 0, "ops_cd:unif_type_cd", "multiComboVal:multiComboVal", "CLOTHES:COLOR", rowId);
			multiComboController(gridName, rowId, 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowId);
			multiComboController(gridName, rowId, 2, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowId);
		}

		function multiComboController(gridName, row, multiCnt, arrayStr, comboValArrayStr, comboKeyArrayStr, iRow){
			var rowId;
			if(typeof(row) == "object"){
				rowId = row.attr('id');
			}else{
				rowId = iRow;
			}
			var arrCol = arrayStr.split(":");
			var arrCombo = comboValArrayStr.split(":");
			var arrComboKey = comboKeyArrayStr.split(":");
			var colValue = getColValue(arrCol[multiCnt],rowId, gridName);
			var comboVal = arrCombo[multiCnt];
			
			if(typeof(comboVal) == 'undefined'){return;}
			if(multiCnt == 0){
				if(colValue == ''){
					$("select#" + rowId +"_"+ arrCol[multiCnt+1]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(clothesComboVal),function(index,optionData){
		    			if(colValue == optionData.key){
		    				comboValTemp += '<option role="option" value="' +
				            optionData.value + '">' +
							optionData.name + '</option>';
		        		}
					});
					
					var orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt+1])[0];
					var orgValue = getColValue(arrCol[multiCnt+1],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt+1]).html(comboValTemp);
					jQuery(orgSelect).val(orgValue);
				}
				
				multiComboController(gridName, row, 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowId);
				multiComboController(gridName, row, 2, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowId);
			}else if(multiCnt == 1){
				colValue = getColValue(arrCol[multiCnt-1],rowId, gridName);
				
				if(colValue == '' || colValue == "false"){
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(comboVal),function(targetNm,optionData){
						$.each(eval(optionData),function(index,optionData){
			    			if(targetNm==arrComboKey[multiCnt]&&colValue == optionData.key){
			    				comboValTemp += '<option role="option" value="' +
					            optionData.value + '">' +
								optionData.name + '</option>';
			        		}
						});
					});
					
					var orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt])[0];
					var orgValue = getColValue(arrCol[multiCnt],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html(comboValTemp);
//					jQuery(orgSelect).val(orgValue);
					jQuery(orgSelect).val(getColValue("hid_color",rowId, gridName));
					$("#"+gridName).setCell(rowId,'hid_color',getColValue(arrCol[multiCnt],rowId, gridName));
				}
			}else if(multiCnt == 2){
				colValue = getColValue(arrCol[multiCnt-1],rowId, gridName);
				
				if(colValue == ''){
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(comboVal),function(targetNm,optionData){
						$.each(eval(optionData),function(index,optionData){
			    			if(targetNm==arrComboKey[multiCnt]&&colValue == optionData.key){
			    				comboValTemp += '<option role="option" value="' +
					            optionData.value + '">' +
								optionData.name + '</option>';
			        		}
						});
					});
					
					orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt])[0];
					orgValue = getColValue(arrCol[multiCnt],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html(comboValTemp);
					jQuery(orgSelect).val(getColValue("hid_size",rowId, gridName));
					$("#"+gridName).setCell(rowId,'hid_size',getColValue(arrCol[multiCnt],rowId, gridName));
				}
			}
		}
		
		function pageStepHelpPopup(){
			if(popup != null ){
				popup.close();
			}
			
			popup = popUpWindow3($("#help_url").val());
		}
		</script>