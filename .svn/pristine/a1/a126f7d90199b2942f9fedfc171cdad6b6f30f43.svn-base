<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ include file="/hncis/include/common_sub.gas" %>
<%
	String menuId = "XUF03";

	String yy = CurrentDateTime.getYear();
	String mm = CurrentDateTime.getMonth();
	String byy = CurrentDateTime.getYearByAddMonth(CurrentDateTime.getDate(),-1);
	String bmm = CurrentDateTime.addMonth(CurrentDateTime.getDate(),-1);
	String tdd = Integer.toString( CurrentDateTime.getMaxday(yy+mm));
	
	String fromDay = byy + "-" + bmm + "-" + "01";
	String toDay = yy + "-" + mm + "-" + tdd;

	String strSch = JSPMessageSource.getMessage("BUTTON.SEARCH", locale);
	String strRqc = JSPMessageSource.getMessage("BUTTON.REQUESTCANCEL", locale);
	String strCfm = JSPMessageSource.getMessage("BUTTON.CONFIRM", locale);
	String strCfc = JSPMessageSource.getMessage("BUTTON.CONFIRMCANCEL", locale);
	String strExl = JSPMessageSource.getMessage("BUTTON.EXCEL", locale);

	String strBtn = "";
	strBtn = strSch+"/search@"+strRqc+"/requestCancel@"+strCfm+"/confirm@"+strCfc+"/reject@"+strExl+"/excel";

	String tempPath     = request.getServletPath().toString();
	String stepHelpUrl  = StringUtil.getStepHelp(tempPath);
%>
<html>
	<head>
		<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
		<title>LIST</title>
	</head>
	<body>
		<div id="wrap">
	    	<form name="frm" id="frm">
	    		<input type="hidden" id="help_url" name="help_url" value="<%=stepHelpUrl%>">

		    	<%@ include file="../include/hncis_header.gas"%>
		        <div id="contents_wrap">
		        	<%@ include file="../include/hncis_left.gas"%>
		            <div id="contents">
		            	<%=CommonGasc.getTitleAndButtonNew(sess_empno
							,"XUF03"
							,strBtn
							,null
							,null
							,null
							,request)
						%>
		                <div class="search_area">
		                	<table>
		                        <colgroup>
		                        	<col style="width:60px;" />
		                        	<col style="width:260px;" />
		                        	<col style="width:60px;" />
		                        	<col style="width:170px;" />
		                        	<col style="width:60px;" />
		                        	<col style="width:170px;" />
		                        	<col style="width:60px;" />
		                            <col style="width:auto;" />
		                        </colgroup>
		                        <tbody>
		                            <tr>
		                            	<th><fmt:message key="dept_nm"/></th>
										<td>
											<input type="text" name="key_ops_cd" id="key_ops_cd" style="ime-mode:disabled;width:70px" onkeyup="deptSearch();">
											<input id="key_ops_nm" type="text" style="width:140px" class="disabled" readonly>
											<img id="deptBtn" name="img_ignm_pop" src="<%=ctxPath %>/images/hncis_common/find-f.png" style="cursor:hand;filter:alpha(opacity=100)" class='button' onMouseOver="na_change_img_src('img_ignm_pop','document', '<%=ctxPath %>/images/hncis_common/find-n.png');" onMouseOut="na_restore_img_src('img_ignm_pop');" onclick="deptFind()" align="absmiddle">
										</td>
										<th><fmt:message key="eeno"/></th>
										<td>
											<input type="text" id="key_eeno" style="width:150px" maxlength="8">
										</td>
										<th><fmt:message key="eenm"/></th>
										<td>
											<input type="text" id="key_eeno_nm" style="width:150px" maxlength="20">
										</td>
									</tr>
									<tr>
										<th><fmt:message key="uniform"/></th>
										<td>
											<select id="key_unif_type_cd" onChange="fnGetKeyCombo('COLOR');" style="width: 213px">
											</select>
										</td>
										<th><fmt:message key="type"/></th>
										<td>
											<select id="key_unif_clr_cd" onChange="fnGetKeyCombo('SIZE');" style="width:150px;">
												<option value=""><fmt:message key="total"/></option>
											</select>
										</td>
										<th><fmt:message key="size"/></th>
										<td>
											<select id="key_unif_msm_cd" style="width:150px;">
												<option value=""><fmt:message key="total"/></option>
											</select>
										</td>
										<th><fmt:message key="sex"/></th>
										<td>
											<select id="key_unif_sex_cd" onChange="fnGetKeyCombo('CLOTHES');" style="width: 150px">
											</select>
										</td>
									</tr>
									<tr>
										<th><fmt:message key="req_ymd"/></th>
										<td>
											<!-- <input type="text" id="key_unif_ptt_ymd" style="width:70px" maxlength="10"> -->
											<input id="key_fr_ymd" type="text" style="width:80px" value="<%=fromDay%>" readonly> ~
											<input id="key_to_ymd" type="text" style="width:80px"  value="<%=toDay%>" readonly>
										</td>
										<th><fmt:message key="pgs_st_nm"/></th>
										<td>
											<select id="key_uaps1_cd" style="width:150px;"></select>
										</td>
									</tr>
		                        </tbody>
		                    </table>
		                </div>
		                <div class="jq_tbl">
			                <table id="htmlTable" class="scroll"></table>
							<div id="htmlPager" class="scroll"></div>
						</div>
		                <%@ include file="../include/hncis_message.gas"%>
		            </div>
		            <div class="clear"></div>
		        </div>
	        </form>
			<form id="hideForm" name="hideForm" method="post">
				<input type="hidden" id="M_DOC_NO" name="M_DOC_NO">
				<input type="hidden" id="hid_csrfToken"	name="hid_csrfToken">
			</form>
	    </div>
	</body>
</html>
		<script type="text/javascript">
		var multiComboVal;
		var gridName = "htmlTable";
		var gridParam;
		var clothesComboVal;
		var colorComboVal;
		var sizeComboVal;
		var initFlag = true;

		var datarow = {unif_sex_cd:"",old_unif_type_cd:"",old_unif_clr_cd:"",old_unif_msm_cd:"",hid_color:"",hid_size:""
					  ,ops_cd:"",trtm_yymm:"",unif_ptt_scn_cd:"",uaps1_cd:"",unif_ptt_ymd:"",uaps1_nm:""
					  ,eeno:"",eenm:"",poa_nm:"",ops_nm:"",unif_type_cd:"",unif_clr_cd:"",unif_msm_cd:"",unif_ptt_qty:"", snb_rson_sbc:""};

//		var excelCn = ['신청일자', '진행상태', '사번', '이름', '직급', '부서', '근무복', '구분', '사이즈', '수량'];
		var excelCn = ['<fmt:message key="req_ymd"/>',				//신청일자
		               '<fmt:message key="pgs_st_nm"/>',			//진행상태
		               '<fmt:message key="eeno"/>',					//사번
		               '<fmt:message key="eenm"/>',					//이름
		               '<fmt:message key="position"/>',				//직급
		               '<fmt:message key="dept_nm"/>',				//부서
		               '<fmt:message key="uniform"/>', 				//근무복
		               '<fmt:message key="type"/>', 				//구분
		               '<fmt:message key="size"/>', 				//사이즈
		               '<fmt:message key="qty"/>'];					//수량
		var excelCm = ['unif_ptt_ymd','uaps1_nm','eeno','eenm','poa_nm','ops_nm','unif_type_nm','unif_clr_nm','unif_msm_nm','unif_ptt_qty'];
		var excelFm = ['string','string','string','string','string','string','string','string','string','string'];

		function fnSetDocumentReady(){
			initMenus();
			$('#UF').slideDown('fast');

			$(".inputOnlyNumber").numeric();
//			$("#key_unif_ptt_ymd").datepicker({dateFormat: 'yy-mm-dd'});
			$("#key_fr_ymd").datepicker({dateFormat: 'yy-mm-dd'});
			$("#key_to_ymd").datepicker({dateFormat: 'yy-mm-dd'});

			getCommonCode("key_unif_sex_cd:XUF05:A;key_uaps1_cd:XUF03:A;", "N", "initCombo();");
		}

		function initCombo(){
			$("#key_uaps1_cd").val("A");
			getCommonCode("A:A:A", "N", "fnKeyCombo(jsonData.sendResult);", "/hncis/uniform/doSearchUniformMultiComboList.do");
		}

		function fnKeyCombo(result){
			multiComboVal = result;

			clothesComboVal = result.CLOTHES;
			colorComboVal   = result.COLOR;
			sizeComboVal    = result.SIZE;

			fnGetKeyCombo("CLOTHES");
		}

		function fnGetKeyCombo(gubun){
			var comboId = "";
			var comboKey = "";
			switch(gubun){
			case "CLOTHES" :
				comboKey = $("#key_unif_sex_cd").val();
				comboId  = "key_unif_type_cd";
				break;
			case "COLOR"   :
				$("#key_unif_msm_cd").html("<option value=''><fmt:message key='total'/></option>");
				comboKey = $("#key_unif_type_cd").val();
				comboId  = "key_unif_clr_cd";
				break;
			case "SIZE"    :
				comboKey = $("#key_unif_clr_cd").val();
				comboId  = "key_unif_msm_cd";
				break;
			}

			var comboVal2 = "";

			$.each(eval(multiComboVal),function(targetNm,optionData){
				if(targetNm == gubun){
					$.each(eval(optionData),function(index,optionData){
						if(index == 0 || comboKey == optionData.key){
							comboVal2 += '<option role="option" value="' +
							optionData.value + '">' +
							optionData.name + '</option>';
						}
					});

					$("select#"+comboId).html(comboVal2);
				}
			});

			if(gubun == "CLOTHES"){
				if(initFlag){
					initFlag = false;
					init();
				}else{
					fnGetKeyCombo("COLOR");
				}
			}
		}

		function init(){
// 			cn = [ '', '', '', '', '', '', '', '', '', '', '신청일자', '진행상태', '사번', '이름', '직급', '부서', '근무복', '구분', '사이즈', '수량', '반려사유' ];
			var cn = [ '' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'' // ""
		          ,'<fmt:message key="req_ymd"/>' // "신청일자"
		          ,'<fmt:message key="pgs_st_nm"/>' // "진행상태"
		          ,'<fmt:message key="eeno"/>' // "사번"
		          ,'<fmt:message key="eenm"/>' // "이름"
		          ,'<fmt:message key="position"/>' // "직급"
		          ,'<fmt:message key="dept_nm"/>' // "부서"
		          ,'<fmt:message key="uniform"/>' // "근무복"
		          ,'<fmt:message key="type"/>' // "구분"
		          ,'<fmt:message key="size"/>' // "사이즈"
		          ,'<fmt:message key="qty"/>' // "수량"
		          ,'<fmt:message key="rtn_rsn"/>' //반려사유
		          ,'' // "문서번호"
		          ];
			cm = [
				{name:'unif_sex_cd'     , index:'unif_sex_cd'     , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'old_unif_type_cd', index:'old_unif_type_cd', formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'old_unif_clr_cd' , index:'old_unif_clr_cd' , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'old_unif_msm_cd' , index:'old_unif_msm_cd' , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'hid_color'       , index:'hid_color'       , formatter:'string', width:30 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'hid_size'        , index:'hid_size'        , formatter:'string', width:30 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'ops_cd'          , index:'ops_cd'          , formatter:'string', width:30 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'trtm_yymm'       , index:'trtm_yymm'       , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'unif_ptt_scn_cd' , index:'unif_ptt_scn_cd' , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'uaps1_cd'        , index:'uaps1_cd'        , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true},
				{name:'unif_ptt_ymd'    , index:'unif_ptt_ymd'    , formatter:'string', width:80 , align:'center', editable:false, sortable:false},
				{name:'uaps1_nm'        , index:'uaps1_nm'        , formatter:'string', width:60 , align:'center', editable:false, sortable:false},
				{name:'eeno'            , index:'eeno'            , formatter:'string', width:60 , align:'center', editable:false, sortable:false},
				{name:'eenm'            , index:'eenm'            , formatter:'string', width:120, align:'left'  , editable:false, sortable:false},
				{name:'poa_nm'          , index:'poa_nm'          , formatter:'string', width:120, align:'center', editable:false, sortable:false},
				{name:'ops_nm'          , index:'ops_nm'          , formatter:'string', width:120, align:'center', editable:false, sortable:false},
				{name:'unif_type_cd'    , index:'unif_type_cd'    , formatter:'select', width:180, align:'center', editable:false, sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetGridCombo("type_cd"),
						dataEvents:[
						    {type:"change",
						    	fn:function(e){
						    		var row = $(e.target).closest("tr.jqgrow");
						    		var rowId = row.attr("id");
						    		var cbs = $("#jqg_" + gridName + "_" + rowId);
						    		if(!cbs.is(":checked")){
						    			jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
						    		}

						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 2, "unif_type_cd:unif_type_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
						    	}
						    }
						]
					}
				},
				{name:'unif_clr_cd'   , index:'unif_clr_cd' , formatter:'select', width:180, align:'center', editable:false, sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetDefGridCombo("color_type"),
						dataEvents:[
							{type:'change',
								fn:function(e){
									var row = $(e.target).closest("tr.jqgrow");
						    		var rowId = row.attr("id");
									var cbs = jQuery("#jqg_"+gridName+"_"+rowId);
			                        if(!cbs.is(":checked")){
			                        	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
			                        }
//						    		multiComboController(gridName, $(e.target).closest('tr.jqgrow'), 2, "hid_unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");

						    		$("#htmlTable").setCell(rowId,'hid_color',getColValue("unif_clr_cd",rowId, gridName));
								}
						    }
						]
					}
				},
				{name:'unif_msm_cd'   , index:'unif_msm_cd' , formatter:'select', width:150 , align:'center', editable:false , sortable:false,
					edittype:"select",
					editoptions:{
						value:fnSetDefGridCombo("size_type"),
						dataEvents:[
						    {type:'change',
								fn:function(e){
									var row = $(e.target).closest('tr.jqgrow');
									var rowId = row.attr('id');
									var cbs = jQuery("#jqg_"+gridName+"_"+rowId);
			                        if(!cbs.is(":checked")){
			                        	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
			                        }

			                        $("#htmlTable").setCell(rowId,'hid_size',getColValue("unif_msm_cd",rowId, gridName));
								}
						    }
						]
					}
				},
				{name:'unif_ptt_qty'   , index:'unif_ptt_qty'   , formatter:'currency', width:60 , align:'right', editable:false, sortable:false, formatoptions: {
				    thousandsSeparator:",",
				    defaultValue:"",
				    decimalPlaces:0
				  }
        	  	},
// 				{name:"unif_ptt_qty",	index:"unif_ptt_qty"		, sortable:false,		formatter: "select",	width:50,	align:'center',	editable:false,	edittype:'select',
// 					 editoptions:{
// 						 value:"1:1;2:2;3:3;4:4;5:5;6:6;7:7;8:8;9:9;10:10",
// 						 dataEvents:[
// 							{type:'change',
// 								fn:function(e){
// 									var row = $(e.target).closest('tr.jqgrow');
// 									var rowId = row.attr('id');
// 									var cbs = jQuery("#jqg_"+gridName+"_"+rowId);
// 							        if(!cbs.is(":checked")){
// 							        	jQuery("#"+gridName).jqGrid("setSelection", rowId, true);
// 							        }
// 								}
// 				        	}]
// 					 },
// 					 editrules:{required:true}
// 				 },
				{name:'snb_rson_sbc'    , index:'snb_rson_sbc'   , formatter:'string', width:200 , align:'left', editable:true, sortable:false},
				{name:'doc_no'        	, index:'doc_no'         , formatter:'string', width:80 , align:'center', editable:false, sortable:false, hidden:true}
			];

			var params = {
				search_ops_cd		: $("#key_ops_cd").val(),
				search_sex_cd		: $("#key_unif_sex_cd").val(),
				search_eeno			: $("#key_eeno").val(),
				search_eenm			: $("#key_eeno_nm").val(),
//				search_unif_ptt_ymd	: selectNum($("#key_unif_ptt_ymd").val()),
				fr_ymd       		: selectNum($("#key_fr_ymd").val()),
				to_ymd       		: selectNum($("#key_to_ymd").val()),
				search_unif_type_cd	: $("#key_unif_type_cd").val(),
				search_unif_clr_cd	: $("#key_unif_clr_cd").val(),
				search_unif_msm_cd	: $("#key_unif_msm_cd").val(),
				search_uaps1_cd     : $("#key_uaps1_cd").val(),
				corp_cd				: sess_corp_cd,
				locale				: $("#lo").val()
			};

			gridParam = {
				viewEdit : [{
					gridName     : "htmlTable",
					url          : "doSearchGridListToConfirm.do",
					colNames     : cn,
					colModel     : cm,
					height       : "100%",
					sortname     : "unif_ptt_ymd",
					sortorder    : "desc",
					rowNum		 : 15,
					rownumbers   : true,
					multiselect  : true,
					cellEdit     : true,
					fnMerge      : false,
					paramJson    : params,
					pager 		 : "htmlPager",
					selectCellFc : "selectRowMultiComboSetting(rowid, iCol);",
					completeFc   : "addGridRow();initAfterMenus();"
				}]
			};

			commonJqGridInit(gridParam, "N");
		}

		function selectRowMultiComboSetting(rowid, iCol){
			var allRow = $("#"+gridName).getDataIDs();

			for(var i=0; i<allRow.length; i++){
				if(allRow[i]){
					var comboValTemp="";
					if(getColValue("ops_cd", allRow[i], gridName) != ""){
						$.each(eval(clothesComboVal),function(index,optionData){
							if(getColValue("ops_cd", allRow[i], gridName) == optionData.key){
								comboValTemp += '<option role="option" value="' +
								optionData.value + '">' +
								optionData.name + '</option>';
							}
						});

						$("select#" + allRow[i] +"_"+ "unif_type_cd").html(comboValTemp);
					}
				}
			}

			multiComboController(gridName, rowid, 1, "unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowid);
			multiComboController(gridName, rowid, 2, "unif_type_cd:unif_type_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE", rowid);
		}

		function fnSetGridCombo(gubun, rowId, row){
			if(typeof(rowId) == 'undefined'){
				rowId = "";
			}

			var returnVal = "";
			var targetColNm = "";

			switch(gubun){
			case "type_cd" :
				targetColNm = "unif_type_cd";
				$.each(clothesComboVal, function(index, optionData){
					if(index > 0 && returnVal == ""){
						returnVal  = optionData.value + ":" + optionData.name;
					}else if(returnVal != ""){
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				});
				break;
			case "color_type" :
				targetColNm = "unif_clr_cd";
				$.each(colorComboVal, function(index, optionData){
					if( rowId != "" &&
						optionData.key == getColValue("unif_type_cd", rowId, gridName)){
						returnVal += "<option value='" + optionData.value + "'>" + optionData.name + "</option>";
					}
				});
				break;
			case "size_type" :
				targetColNm = "unif_msm_cd";
				$.each(sizeComboVal, function(index, optionData){
					if(rowId != "" && optionData.key == getColValue("unif_clr_cd", rowId, gridName)){
						returnVal += "<option value='" + optionData.value + "'>" + optionData.name + "</option>";
					}
				});
				break;
			}

			if(gubun == "type_cd"){
				return returnVal;
			}else{
				var orgSelect = $("#" + rowId + "_" + targetColNm)[0];
				var orgValue  = getColValue(targetColNm, rowId, gridName);
				$("select#" + rowId + "_" + targetColNm).html(returnVal);
				$(orgSelect).val(orgValue);
			}
		}

		function fnSetDefGridCombo(gubun){
			var returnVal = "";

			if(gubun == "color_type"){
				$.each(colorComboVal, function(index, optionData){
					if(returnVal == "" && optionData.value != ""){
						returnVal  = optionData.value + ":" + optionData.name;
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				});
			}else{
				$.each(sizeComboVal, function(index, optionData){
					if(returnVal == "" && optionData.value != ""){
						returnVal  = optionData.value + ":" + optionData.name;
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				});
			}

			return returnVal;
		}

		function fnSetGridSizeCombo(){
			var returnVal = "";

			$.each(multiComboVal.SIZE, function(index, optionData){
				if(optionData.key == $("#key_unif_type_cd").val()){
					if(returnVal == ""){
						returnVal  = optionData.value + ":" + optionData.name;
					}else{
						returnVal += ";" + optionData.value + ":" + optionData.name;
					}
				}
			});

			return returnVal;
		}

		function retrieve(btnFlag){
			switch(btnFlag){
				case "search" :
				    doSearch();
					break;
				case "save" :
				    doSave();
					break;
				case "requestCancel" :
				    doRequestCancel();
					break;
				case "confirm" :
					doConfirm();
					break;
				case "confirmCancel" :
					doConfirmCancel();
					break;
				case "reject" :
					doReject();
					break;
				case "excel" :
					doExcel();
					break;
			}
		}

		function doSearch(msgFlag){

//			var allRow = $("#"+gridName).getDataIDs();
		//
//			deptUnifTypeArr = [];
//			for(var i=0; i<allRow.length; i++){
//				if(allRow[i]){
//					var comboValTemp="";
//					$.each(eval(clothesComboVal),function(index,optionData){
//		    			if($("#key_ops_cd").val() == optionData.key){
//		    				deptUnifTypeArr.push(optionData);
//		    				comboValTemp += '<option role="option" value="' +
//				            optionData.value + '">' +
//							optionData.name + '</option>';
//		        		}
//					});
//
//					$("select#" + allRow[i] +"_"+ "unif_type_cd").html(comboValTemp);
//				}
//			}

			params = {
				search_ops_cd		: $("#key_ops_cd").val(),
				search_sex_cd		: $("#key_unif_sex_cd").val(),
				search_eeno			: $("#key_eeno").val(),
				search_eenm			: $("#key_eeno_nm").val(),
//				search_unif_ptt_ymd	: selectNum($("#key_unif_ptt_ymd").val()),
				fr_ymd       		: selectNum($("#key_fr_ymd").val()),
				to_ymd       		: selectNum($("#key_to_ymd").val()),
				search_unif_type_cd	: $("#key_unif_type_cd").val(),
				search_unif_clr_cd	: $("#key_unif_clr_cd").val(),
				search_unif_msm_cd	: $("#key_unif_msm_cd").val(),
				search_uaps1_cd     : $("#key_uaps1_cd").val(),
				corp_cd				: sess_corp_cd,
				locale				: $("#lo").val()
			};

			doCommonSearch("doSearchGridListToConfirm.do", util.jsonToString(params), "doSearchCallBack();", gridName, msgFlag);
		}

		function doSearchCallBack(){
			addGridRow();
		}

		function doSave(){
			var data;
			var iParams = [];

			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");

			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i], "save")){ return; }
					data = {
						eeno             : getColValue("eeno"            , selectRow[i], gridName),
						unif_sex_cd      : getColValue("unif_sex_cd"     , selectRow[i], gridName),
						old_unif_type_cd : getColValue("old_unif_type_cd", selectRow[i], gridName),
						old_unif_clr_cd  : getColValue("old_unif_clr_cd" , selectRow[i], gridName),
						old_unif_msm_cd  : getColValue("old_unif_msm_cd" , selectRow[i], gridName),
						trtm_yymm        : getColValue("trtm_yymm"       , selectRow[i], gridName),
						unif_ptt_scn_cd  : getColValue("unif_ptt_scn_cd" , selectRow[i], gridName),
						unif_type_cd     : getColValue("unif_type_cd"    , selectRow[i], gridName),
						unif_clr_cd      : getColValue("hid_color"       , selectRow[i], gridName),
						unif_msm_cd      : getColValue("hid_size"        , selectRow[i], gridName),
						unif_ptt_qty     : getColValue("unif_ptt_qty"    , selectRow[i], gridName),
						uaps1_cd         : getColValue("uaps1_cd"        , selectRow[i], gridName),
						updr_eeno        : sess_empno,
						corp_cd			 : sess_corp_cd
					};

					iParams.push(data);
				}
			}

			if(iParams.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			confirmUI('<fmt:message key="MSG.CNF.0004"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var params = {
								iParams : util.jsonToList(iParams)
							};
						doCommonAjax("doSaveToConfirm.do", params, "doSaveCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function doSaveCallBack(result){
			setBottomMsg(result.message, true);
			doSearch("N");
		}

		function doRequestCancel(){
			var data;
			var dParams = [];

			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");

			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i], "requestCancel")){ return; }
					data = {
						eeno            : getColValue("eeno"            , selectRow[i], gridName),
						unif_type_cd    : getColValue("old_unif_type_cd", selectRow[i], gridName),
						unif_clr_cd     : getColValue("old_unif_clr_cd" , selectRow[i], gridName),
						unif_msm_cd     : getColValue("old_unif_msm_cd" , selectRow[i], gridName),
						unif_ptt_scn_cd : getColValue("unif_ptt_scn_cd" , selectRow[i], gridName),
						trtm_yymm       : getColValue("trtm_yymm"       , selectRow[i], gridName),
						unif_ptt_qty    : getColValue("unif_ptt_qty"    , selectRow[i], gridName),
						doc_no    		: getColValue("doc_no"    , selectRow[i], gridName),
						corp_cd			: sess_corp_cd,
						updr_eeno		: sess_empno
					};

					dParams.push(data);
				}
			}

			if(dParams.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			confirmUI('<fmt:message key="MSG.CNF.0006"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var params = {
								dParams : util.jsonToList(dParams)
							};
						doCommonAjax("doCancelRequestToList.do", params, "doRequestCancelCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function doRequestCancelCallBack(result){
			setBottomMsg(result.message, true);
			doSearch("N");
		}

		function doConfirm(){
			var data;
			var uParams = [];

			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");

			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i], "confirm")){ return; }
					data = {
						eeno            : getColValue("eeno"            , selectRow[i], gridName),
						unif_sex_cd     : getColValue("unif_sex_cd"     , selectRow[i], gridName),
						unif_type_cd    : getColValue("old_unif_type_cd", selectRow[i], gridName),
						unif_clr_cd     : getColValue("old_unif_clr_cd" , selectRow[i], gridName),
						unif_msm_cd     : getColValue("old_unif_msm_cd" , selectRow[i], gridName),
						unif_ptt_scn_cd : getColValue("unif_ptt_scn_cd" , selectRow[i], gridName),
						trtm_yymm       : getColValue("trtm_yymm"       , selectRow[i], gridName),
						unif_ptt_qty    : getColValue("unif_ptt_qty"    , selectRow[i], gridName),
						doc_no    		: getColValue("doc_no"    		, selectRow[i], gridName),
						uaps1_cd        : "3",
						aplc_eeno       : sess_empno,
						updr_eeno       : sess_empno,
						corp_cd			: sess_corp_cd
					};

					uParams.push(data);
				}
			}

			if(uParams.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			confirmUI('<fmt:message key="MSG.CNF.0007"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var params = {
								uParams   : util.jsonToList(uParams)
							};
						doCommonAjax("doUpdateConfirmToConfirm.do", params, "doConfirmCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function doConfirmCallBack(result){
			setBottomMsg(result.message, true);
			if(result.result == "Y"){
				doSearch("N");
			}
		}

		function doConfirmCancel(mode){
			var data;
			var uParams = [];

			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");

			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i], "confirmCancel")){ return; }
					data = {
						eeno            : getColValue("eeno"            , selectRow[i], gridName),
						unif_sex_cd     : getColValue("unif_sex_cd"     , selectRow[i], gridName),
						unif_type_cd    : getColValue("old_unif_type_cd", selectRow[i], gridName),
						unif_clr_cd     : getColValue("old_unif_clr_cd" , selectRow[i], gridName),
						unif_msm_cd     : getColValue("old_unif_msm_cd" , selectRow[i], gridName),
						unif_ptt_scn_cd : getColValue("unif_ptt_scn_cd" , selectRow[i], gridName),
						trtm_yymm       : getColValue("trtm_yymm"       , selectRow[i], gridName),
						unif_ptt_qty    : getColValue("unif_ptt_qty"    , selectRow[i], gridName),
						uaps1_cd        : "A",
						aplc_eeno       : sess_empno,
						updr_eeno       : sess_empno,
						corp_cd			: sess_corp_cd
					};

					uParams.push(data);
				}
			}

			if(uParams.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			confirmUI('<fmt:message key="MSG.CNF.0006"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var params = {
								uParams   : util.jsonToList(uParams)
							};
						doCommonAjax("doUpdateConfirmCancelToConfirm.do", params, "doConfirmCancelCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function doConfirmCancelCallBack(result){
			setBottomMsg(result.message, true);
			if(result.result == "Y"){
				doSearch("N");
			}
		}

		function doReject(){
			var params = [];
			var data;

			var selectRow = $("#"+gridName).jqGrid("getGridParam", "selarrrow");

			if(selectRow.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			for(var i=0; i<selectRow.length; i++){
				if(selectRow[i]){
					if(!fnValidationChk(selectRow[i], "reject")){ return; }

					if(getColValue("snb_rson_sbc", selectRow[i], gridName) == ""){
						alertUI(selectRow[i] + " <fmt:message key="MSG.ROW.0093"/>");
						return;
					}

					data = {
						eeno            : getColValue("eeno"            , selectRow[i], gridName),
						unif_sex_cd     : getColValue("unif_sex_cd"     , selectRow[i], gridName),
						unif_type_cd    : getColValue("old_unif_type_cd", selectRow[i], gridName),
						unif_clr_cd     : getColValue("old_unif_clr_cd" , selectRow[i], gridName),
						unif_msm_cd     : getColValue("old_unif_msm_cd" , selectRow[i], gridName),
						unif_ptt_scn_cd : getColValue("unif_ptt_scn_cd" , selectRow[i], gridName),
						trtm_yymm       : getColValue("trtm_yymm"       , selectRow[i], gridName),
						unif_ptt_qty    : getColValue("unif_ptt_qty"    , selectRow[i], gridName),
						doc_no    		: getColValue("doc_no"    		, selectRow[i], gridName),
						uaps1_cd        : "2",
						updr_eeno       : sess_empno,
						corp_cd			: sess_corp_cd,
						snb_rson_sbc	: getColValue("snb_rson_sbc", selectRow[i], gridName)
					};

					params.push(data);
				}
			}

			if(params.length == 0){
				alertUI('<fmt:message key="MSG.SEL.0011"/>');
				return;
			}

			confirmUI('<fmt:message key="MSG.CNF.0010"/>');
			$("#pop_yes").click(function(){
				$.unblockUI({
					onUnblock: function(){
						var paramData = {
								uParams : util.jsonToList(params)
							};
						doCommonAjax("doRejectListToComfirmList.do", paramData, "rejectCallBack(jsonData.sendResult);");
					}
				});
			});
		}

		function rejectCallBack(result){
			setBottomMsg(result.message, true);
			doSearch("N");
		}

		function fnValidationChk(rowId, mode){
			if(getColValue("eeno", rowId, gridName) == ""){
				alertUI(rowId + ' <fmt:message key="MSG.ROW.0055"/>');
				return false;
			}

			switch(mode){
			case "save" :
				if(getColValue("uaps1_cd", rowId, gridName) != "2"){
					alertUI("List " + rowId + " Line : You can't Edit in processing.");
					return false;
				}
				if(getColValue("unif_type_cd", rowId, gridName) != ""){
					alertUI("List " + rowId + " Line : Please select Type of Clothes.");
					return false;
				}
				if(getColValue("unif_clr_cd", rowId, gridName) != ""){
					alertUI("List " + rowId + " Line : Please select Color.");
					return false;
				}
				if(getColValue("unif_msm_cd", rowId, gridName) != ""){
					alertUI(rowId + ' <fmt:message key="MSG.ROW.0042"/>');
					return false;
				}
				break;
			case "requestCancel" :
				if(getColValue("uaps1_cd", rowId, gridName) != "A"){
					alertUI(rowId + ' <fmt:message key="MSG.ROW.0084"/>');
					return false;
				}
				break;
			case "confirm" :
				if(getColValue("uaps1_cd", rowId, gridName) != "A"){
					alertUI(rowId + ' <fmt:message key="MSG.ROW.0065"/>');
					return false;
				}
				break;
			case "reject" :
				if(getColValue("uaps1_cd", rowId, gridName) != "A"){
					alertUI(rowId + ' <fmt:message key="MSG.ROW.0066"/>');
					return false;
				}
				break;
			case "confirmCancel" :
				if(getColValue("uaps1_cd", rowId, gridName) != "3"){
					alertUI("List " + rowId + " Line : You can't Confirm Cancel in processing.");
					return false;
				}
				break;
			}

			return true;
		}

		function deptFind(){
			var param = "?dcd=key_ops_cd&dcdNm=key_ops_nm&callBackYn=Y&csrfToken="+$("#csrfToken").val();
			newPopWin(ctxPath+"/hncis/popup/deptPopup.gas"+param, "440", "510", "pop_dept");
		}

		function deptFindCallBack(){
			fnGetKeyCombo("CLOTHES");
		}

		function deptSearch(){
			if($("#key_ops_cd").val() != ""){
				var keyData = { xorg_orga_c : $("#key_ops_cd").val(),
								corp_cd		: sess_corp_cd
				};
				paramData = {
					paramJson : util.jsonToString(keyData)
				};
				doCommonAjax("/doSearchToDeptInfo.do", paramData, "deptCallBack(jsonData.sendResult)");
			}else{
				$("#key_ops_nm").val("");
				$("#key_unif_type_cd").html("<option value=''><fmt:message key='total'/></option>");
				fnGetKeyCombo('COLOR');
			}
		}

		function deptCallBack(result){
			$("#key_ops_nm").val(result.xorg_orga_e);

			fnGetKeyCombo("CLOTHES");
		}

		function setInsaInfo(){
			if($("#key_eeno").val() != ""){
				var keyData = { xusr_empno : $("#key_eeno").val(),
								corp_cd    : sess_corp_cd
				};
				paramData = {
					paramJson : util.jsonToString(keyData)
				};
				doCommonAjax("/doSearchToUserInfo.do", paramData, "insaCallBack(jsonData.sendResult)");
			}
		}

		function insaCallBack(result){
			setBottomMsg(result.message, false);
			$("#key_eeno_nm").val(result.xusr_name);
		}

		function clearInsa(){
			if($("#key_eeno").val() == ""){
				$("#key_eeno_nm").val("");
			}
		}

		function doExcel(){

			keyData = {
				search_ops_cd		: $("#key_ops_cd").val(),
				search_sex_cd		: $("#key_unif_sex_cd").val(),
				search_eeno			: $("#key_eeno").val(),
				search_eenm			: $("#key_eeno_nm").val(),
				fr_ymd       		: selectNum($("#key_fr_ymd").val()),
				to_ymd       		: selectNum($("#key_to_ymd").val()),
				search_unif_type_cd	: $("#key_unif_type_cd").val(),
				search_unif_clr_cd	: $("#key_unif_clr_cd").val(),
				search_unif_msm_cd	: $("#key_unif_msm_cd").val(),
				search_uaps1_cd     : $("#key_uaps1_cd").val(),
				corp_cd				: sess_corp_cd,
				locale				: $("#lo").val()
			};

			var params = [
			      		{name : 'fileName',		value : "Team Wear"},
			      		{name : 'header',		value : util.jsonToArray(excelCn)},
			      		{name : 'headerName',	value : util.jsonToArray(excelCm)},
			      		{name : 'fomatter',		value : util.jsonToArray(excelFm)},
			      		{name : 'paramJson',	value : util.jsonToString(keyData)},
			      		{name : 'firstUseYn',	value : "Y"}
			];

			gridToExcel("#"+gridName, "doExcelListToConfirm.excel", params);
		}

		function multiComboController(gridName, row, multiCnt, arrayStr, comboValArrayStr, comboKeyArrayStr, iRow){
			var rowId;
			if(typeof(row) == "object"){
				rowId = row.attr('id');
			}else{
				rowId = iRow;
			}
			var arrCol = arrayStr.split(":");
			var arrCombo = comboValArrayStr.split(":");
			var arrComboKey = comboKeyArrayStr.split(":");
			var colValue = getColValue(arrCol[multiCnt],rowId, gridName);
			var comboVal = arrCombo[multiCnt];

			if(typeof(comboVal) == 'undefined'){return;}
			if(multiCnt == 0){
				if(colValue == ''){
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(comboVal),function(targetNm,optionData){
						$.each(eval(optionData),function(index,optionData){
			    			if(targetNm==arrComboKey[multiCnt]&&colValue == optionData.key){
			    				comboValTemp += '<option role="option" value="' +
					            optionData.value + '">' +
								optionData.name + '</option>';
			        		}
						});
					});

					var orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt+1])[0];
					var orgValue = getColValue(arrCol[multiCnt+1],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt+1]).html(comboValTemp);
					jQuery(orgSelect).val(orgValue);
				}

				multiComboController(gridName, row, 1, "hid_unif_type_cd:unif_clr_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
				multiComboController(gridName, row, 2, "hid_unif_type_cd:hid_unif_type_cd:unif_msm_cd", "multiComboVal:multiComboVal:multiComboVal", "CLOTHES:COLOR:SIZE");
			}else if(multiCnt == 1){
				colValue = getColValue(arrCol[multiCnt-1],rowId, gridName);

				if(colValue == ''){
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(comboVal),function(targetNm,optionData){
						$.each(eval(optionData),function(index,optionData){
			    			if(targetNm==arrComboKey[multiCnt]&&colValue == optionData.key){
			    				comboValTemp += '<option role="option" value="' +
					            optionData.value + '">' +
								optionData.name + '</option>';
			        		}
						});
					});

					var orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt])[0];
					var orgValue = getColValue(arrCol[multiCnt],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html(comboValTemp);
//					jQuery(orgSelect).val(orgValue);
					jQuery(orgSelect).val(getColValue("hid_color",rowId, gridName));
					$("#"+gridName).setCell(rowId,'hid_color',getColValue(arrCol[multiCnt],rowId, gridName));
				}
			}else if(multiCnt == 2){
				colValue = getColValue(arrCol[multiCnt-1],rowId, gridName);

				if(colValue == ''){
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html('<option role="option" value=""></option>');
				}else{
					var comboValTemp="";
					$.each(eval(comboVal),function(targetNm,optionData){
						$.each(eval(optionData),function(index,optionData){
			    			if(targetNm==arrComboKey[multiCnt]&&colValue == optionData.key){
			    				comboValTemp += '<option role="option" value="' +
					            optionData.value + '">' +
								optionData.name + '</option>';
			        		}
						});
					});

					orgSelect = jQuery('#' + rowId + '_'+arrCol[multiCnt])[0];
					orgValue = getColValue(arrCol[multiCnt],rowId, gridName);
					$("select#" + rowId +"_"+ arrCol[multiCnt]).html(comboValTemp);
					jQuery(orgSelect).val(getColValue("hid_size",rowId, gridName));
					$("#"+gridName).setCell(rowId,'hid_size',getColValue(arrCol[multiCnt],rowId, gridName));
				}
			}
		}

		function pageStepHelpPopup(){
			if(popup != null ){
				popup.close();
			}

			popup = popUpWindow3($("#help_url").val());
		}
		</script>