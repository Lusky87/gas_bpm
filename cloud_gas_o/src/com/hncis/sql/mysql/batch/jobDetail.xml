<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap      
    PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN"      
    "http://ibatis.apache.org/dtd/sql-map-2.dtd">

<sqlMap namespace="jobDetail">
    
    <insert id="insertBgabGascI001Backup">
    	/*insertBgabGascI001Backup*/
    	INSERT INTO BGAB_gasci001_temp(
    		usn					,
			create_time			,
			usr_nm				,
			dprtmt_cd			,
			dprtmt_nm			,
			job_titl_cd			,
			job_titl_nm			,
			email				,
			cmpny_cd			,
			cmpny_nm			,
			mp_num				,
			cc_cd				,
			cc_nm				,
			wrkplc_cd			,
			wrkplc_nm			,
			title_cd			,
			title_nm			,
			join_cmpny_date		,
			work_yn				,
			work_phone_no		,
			benefit_plan_cd		,
			benefit_plan_nm		,
			work_schedule_cd	,
			work_schedule_nm	,
			street				,
			house				,
			aptmt				,
			city				,
			district			,
			postal_code
    	)
    	SELECT 
    		usn					,
    		getdate()			,
			usr_nm				,
			dprtmt_cd			,
			dprtmt_nm			,
			job_titl_cd			,
			job_titl_nm			,
			email				,
			cmpny_cd			,
			cmpny_nm			,
			mp_num				,
			cc_cd				,
			cc_nm				,
			wrkplc_cd			,
			wrkplc_nm			,
			title_cd			,
			title_nm			,
			join_cmpny_date		,
			work_yn				,
    		work_phone_no		,
			benefit_plan_cd		,
			benefit_plan_nm		,
			work_schedule_cd	,
			work_schedule_nm	,
			street				,
			house				,
			aptmt				,
			city				,
			district			,
			postal_code
    	FROM BGAB_gasci001 
    </insert>
    
    <delete id="deleteBgabGascI001Backup">
    	/*deleteBgabGascI001Backup*/
    	DELETE FROM BGAB_gasci001_temp
    	WHERE DATEDIFF(DD, CREATE_TIME, GETDATE()) > 30
    </delete>
    
     <update id="mergeBgabGascZ002ByBatch" parameterClass="BgabGascz002Dto">
     	/*mergeBgabGascZ002ByBatch*/
     	MERGE INTO BGAB_GASCZ002$corp_cd$ a
		USING (SELECT #xusr_empno# AS xusr_empno) b
		ON (a.xusr_empno = b.xusr_empno)
		WHEN MATCHED THEN
		UPDATE SET 
			xusr_name			= #xusr_name#				,
			xusr_en_name		= #xusr_en_name#			,
			xusr_bsns_dept		= #xusr_bsns_dept#			,
			<isNotEqual property="is_xgac" compareValue="Y">
			xusr_dept_code		= #xusr_dept_code#			,
			xusr_dept_name		= #xusr_dept_name#			,
			xusr_plac_work		= #xusr_plac_work#			,
			</isNotEqual>
			xusr_step_code		= #xusr_step_code#			,
			xusr_step_name		= #xusr_step_name#			,
			xusr_cnfm_auth		= #xusr_cnfm_auth#			,
			xusr_retr_flag		= #xusr_retr_flag#			,
			xusr_tel_no         = #xusr_tel_no#             ,
			xusr_cost_cd		= #xusr_cost_cd#			,
			xusr_cost_nm		= #xusr_cost_nm#			,
			xusr_mail_adr		= #xusr_mail_adr#			,
			xusr_street           = #xusr_street#			,
			xusr_house            = #xusr_house#			,
			xusr_aptmt            = #xusr_aptmt#			,
			xusr_city             = #xusr_city#				,
			xusr_district         = #xusr_district#			,
			xusr_postal_code      = #xusr_postal_code#		,
			xusr_work_phone_no    = #xusr_work_phone_no#	,
			xusr_benefit_plan_cd  = #xusr_benefit_plan_cd#	,
			xusr_work_schedule_cd = #xusr_work_schedule_cd#	,
			xusr_benefit_plan_nm  = #xusr_benefit_plan_nm#	,
			xusr_work_schedule_nm = #xusr_work_schedule_nm#	,
			xusr_updt_empno		= #xusr_updt_empno#			,
			xusr_updt_date		= getdate() 
		WHEN NOT MATCHED THEN
		INSERT (
			xusr_empno          ,
			xusr_auth_knd       ,
			xusr_name           ,
			xusr_en_name	    ,
			xusr_gnrl_area      ,
			xusr_plac_work      ,
			xusr_bsns_dept      ,
			xusr_dept_code      ,
			xusr_dept_name      ,
			xusr_step_code      ,
			xusr_step_name      ,
			xusr_dept_knd       ,
			xusr_cnfm_auth      ,
			xusr_all_auth       ,
			xusr_work_auth      ,
			xusr_aply_flag      ,
			xusr_aply_date      ,
			xusr_pswd           ,
			xusr_pswd_date      ,
			xusr_bsns_dept2     ,
			xusr_bsns_dept3     ,
			xusr_dept_code2     ,
			xusr_dept_code3     ,
			xusr_retr_flag      ,
			xusr_tel_no         ,
			xusr_entr_empno     ,
			xusr_updt_empno     ,
			xusr_entr_date      ,
			xusr_updt_date      ,
			xusr_cost_cd    	,
			xusr_cost_nm    	,
			xusr_mail_adr		,
			xusr_street				,
			xusr_house				,
			xusr_aptmt				,
			xusr_city				,
			xusr_district			,
			xusr_postal_code		,
			xusr_work_phone_no		,
			xusr_benefit_plan_cd	,
			xusr_work_schedule_cd	,
			xusr_benefit_plan_nm	,
			xusr_work_schedule_nm
		) VALUES (
			#xusr_empno#		,
			#xusr_auth_knd#		,
			#xusr_name#			,
			#xusr_en_name#		,
			#xusr_gnrl_area#	,
			#xusr_plac_work#	,
			#xusr_bsns_dept#	,
			#xusr_dept_code#	,
			#xusr_dept_name#	,
			#xusr_step_code#	,
			#xusr_step_name#	,
			#xusr_dept_knd#		,
			#xusr_cnfm_auth#	,
			#xusr_all_auth#		,
			#xusr_work_auth#	,
			#xusr_aply_flag#	,
			#xusr_aply_date#	,
			#xusr_pswd#			,
			#xusr_pswd_date#	,
			#xusr_bsns_dept2#	,
			#xusr_bsns_dept3#	,
			#xusr_dept_code2#	,
			#xusr_dept_code3#	,
			#xusr_retr_flag#	,
			#xusr_tel_no#		,
			#xusr_entr_empno#	,
			#xusr_updt_empno#	,
	        getdate()			,
	        getdate()	        ,
	        #xusr_cost_cd# 		,
	        #xusr_cost_nm# 		,
	        #xusr_mail_adr#		,
	        #xusr_street#			,
			#xusr_house#			,
			#xusr_aptmt#			,
			#xusr_city#				,
			#xusr_district#			,
			#xusr_postal_code#		,
			#xusr_work_phone_no#	,
			#xusr_benefit_plan_cd#	,
			#xusr_work_schedule_cd#	,
			#xusr_benefit_plan_nm#	,
			#xusr_work_schedule_nm#
		);
     </update>
     
     <delete id="deleteBgabGascI001">
     	/*deleteBgabGascI001*/
     	DELETE FROM BGAB_gasci001
     </delete>
     
     <delete id="deleteBgabGascZ002Temp">
        /*deleteBgabGascZ002Temp*/
     	DELETE FROM BGAB_GASCZ002$corp_cd$_temp
     </delete>
     
     <delete id="insertBgabGascZ002Temp">
     	/*insertBgabGascZ002Temp*/
     	INSERT INTO BGAB_GASCZ002$corp_cd$_temp
     	SELECT * FROM BGAB_GASCZ002$corp_cd$
     </delete>
     
     <delete id="deleteBgabGascZ003Temp">
     	/*deleteBgabGascZ003Temp*/
     	DELETE FROM BGAB_GASCZ003_temp
     </delete>
     
     <delete id="insertBgabGascZ003Temp">
     	/*insertBgabGascZ003Temp*/
     	INSERT INTO BGAB_GASCZ003_temp
     	SELECT * FROM BGAB_GASCZ003$corp_cd$
     </delete>
     
     <delete id="deleteBgabGascZ008Temp">
     	/*deleteBgabGascZ008Temp*/
     	DELETE FROM BGAB_GASCZ008_temp
     </delete>
     
     <delete id="insertBgabGascZ008Temp">
     	/*insertBgabGascZ008Temp*/
     	INSERT INTO BGAB_GASCZ008_temp
     	SELECT * FROM BGAB_GASCZ008$corp_cd$
     </delete>
     
     <insert id="insertBgabGascI002Backup">
    	/*insertBgabGascI002Backup*/
    	INSERT INTO BGAB_gasci002_temp
    	SELECT 
    		dept_id					,
			dept_nm					,
			upr_dept_id				,
			mngr_job_titl_cd		,
			mngr_job_titl_nm		,
			mngr_usn				,
			mngr_nm					,
			wrkplc_cd				,
			wrkplc_nm				,
			corp_cd					,
			corp_nm					,
			dept_lv					,
			dept_lv_nm				,
			clos_d					,
    		getdate()
    	FROM BGAB_gasci002
    </insert>
    
    <delete id="deleteBgabGascI002Backup">
    	/*deleteBgabGascI002Backup*/
    	DELETE FROM BGAB_gasci002_temp
    	WHERE DATEDIFF(DD, CREATE_TIME, GETDATE()) > 30
    </delete>
    
    <update id="mergeBgabGascZ003ByBatch" parameterClass="BgabGascz003Dto">
     	/*mergeBgabGascZ003ByBatch*/
     	MERGE INTO BGAB_GASCZ003$corp_cd$ a
		USING (SELECT #xorg_orga_c# AS xorg_orga_c) b
		ON (a.xorg_orga_c = b.xorg_orga_c)
		WHEN MATCHED THEN
		UPDATE SET 
			xorg_orga_e			= #xorg_orga_e#				,
			xorg_orga_csner		= #xorg_orga_csner#			,
			xorg_plac_c			= #xorg_plac_c#				,
			xorg_rsps_i			= #xorg_rsps_i#				,
			xorg_rsps_m			= #xorg_rsps_m#				,
			xorg_rsps_crank		= #xorg_rsps_crank#			,
			xorg_rsps_mrank		= #xorg_rsps_mrank#			,
			xorg_company		= #xorg_company#			,
			xorg_dept_lv		= #xorg_dept_lv#			,
			xorg_dept_lv_nm		= #xorg_dept_lv_nm#			,
			xorg_clos_d			= #xorg_clos_d#				,
			updatetime			= CONVERT(NVARCHAR, getDate(), 112)
		WHEN NOT MATCHED THEN
		INSERT (
			XORG_ORGA_C          	,
			XORG_ORGA_E       		,
			XORG_ORGA_CSNER         ,
			XORG_CLOS_D	    		,
			XORG_PLAC_C      		,
			XORG_RSPS_I      		,
			XORG_RSPS_M      		,
			XORG_RSPS_CRANK      	,
			XORG_RSPS_MRANK      	,
			XORG_COMPANY     		,
			XORG_DEPT_LV     		,
			XORG_DEPT_LV_NM    		,
			CREATETIME      		,
			UPDATETIME
		) VALUES (
			#xorg_orga_c#			,
			#xorg_orga_e#			,
			#xorg_orga_csner#		,
			#xorg_clos_d#			,
			#xorg_plac_c#			,
			#xorg_rsps_i#			,
			#xorg_rsps_m#			,
			#xorg_rsps_crank#		,
			#xorg_rsps_mrank#		,
			#xorg_company#			,
			#xorg_dept_lv#			,
			#xorg_dept_lv_nm#		,
			CONVERT(NVARCHAR, getDate(), 112)			    ,
			CONVERT(NVARCHAR, getDate(), 112)
		);
     </update>
     
     <delete id="deleteBgabGascI002">
     	/*deleteBgabGascI002*/
     	DELETE FROM BGAB_gasci002
     </delete>
     
     <select id="selectBgabGascZ008Info" parameterClass="BgabGascz008Dto" resultClass="BgabGascz008Dto">
     	/*selectBgabGascZ008Info*/
     	SELECT orga_c, empno, subt_flag, empno_org, orga_csner
     	FROM BGAB_GASCZ008$corp_cd$
     	WHERE orga_c = #orga_c#
     </select>
     
     <update id="mergeBgabGascZ008ByBatch" parameterClass="BgabGascz008Dto">
     	/*mergeBgabGascZ008ByBatch*/
     	MERGE INTO BGAB_GASCZ008$corp_cd$ a
		USING (SELECT #orga_c# AS orga_c) b
		ON (a.orga_c = b.orga_c)
		WHEN MATCHED THEN
		UPDATE SET 
			orga_e		= #orga_e#		,
			empno		= #empno#		,
			empno_org	= #empno_org#	,
			name		= #name#		,
			levl_c 		= CASE WHEN NVL(#levl_c#, '') = '' THEN 1 ELSE #levl_c# END,
			call_m		= 'Manager'		,
			rank_c		= #rank_c#		,
			rank_e		= #rank_e#		,
			orga_csner	= #orga_csner#	,
			subt_flag	= ''			,
			subt_from	= ''			,
			subt_to		= ''			,
			updr_eeno	= 'BATCH'		,
			mdfy_ymd	= CONVERT(NVARCHAR, getDate(), 112)
		WHEN NOT MATCHED THEN
		INSERT (
			ORGA_C				,
			ORGA_E				,
			EMPNO				,
			EMPNO_ORG			,
			NAME				,
			LEVL_C				,
			CALL_M				,
			RANK_C				,
			RANK_E				,
			ORGA_CSNER			,
			SUBT_FLAG			,
			SUBT_FROM			,
			SUBT_TO				,
			INP_YMD				,
			IPE_EENO			,
			MDFY_YMD			,
			UPDR_EENO
		) VALUES(
			#orga_c#			,
			#orga_e#			,
			#empno#				,
			#empno_org#			,
			#name#				,
			CASE WHEN NVL(#levl_c#, '') = '' THEN 1 ELSE #levl_c# END,
			'Manager'			,
			#rank_c#			,
			#rank_e#			,
			#orga_csner#		,
			''					,
			''					,
			''					,
			CONVERT(NVARCHAR, getDate(), 112)			,
			'BATCH'				,
			CONVERT(NVARCHAR, getDate(), 112)			,
			'BATCH'
		);
     </update>
     
     <update id="updateBgabGascZ008ByUpperDept" parameterClass="BgabGascz008Dto">
     	/*updateBgabGascZ008ByUpperDept*/
     	UPDATE BGAB_GASCZ008$corp_cd$
     	SET  orga_csner	= #orga_csner#	,
     		updr_eeno	= 'BATCH'		,
			mdfy_ymd	= CONVERT(NVARCHAR, getDate(), 112)
     	WHERE orga_c = #orga_c#
     </update>
     
     <select id="selectCoordiInfo" parameterClass="BgabGascz008Dto" resultClass="BgabGascz008Dto">
     	/*selectCoordiInfo*/
     	SELECT EMPNO, NAME FROM(
	     	SELECT 
	     		ROW_NUMBER() OVER(ORDER BY XUSR_EMPNO DESC) AS R_NUM,
	     		XUSR_EMPNO AS EMPNO, XUSR_NAME AS NAME
	     	FROM BGAB_GASCZ002$corp_cd$
	     	WHERE XUSR_DEPT_CODE = #orga_c#
	     	AND XUSR_STEP_CODE = '51'
	     	AND XUSR_RETR_FLAG = 'N'
	    ) TEMP 
	    WHERE R_NUM = 1
     </select>
     
     <update id="updateAsVehicleInfo" parameterClass="bgabGascbv01Dto">
     	/*updateAsVehicleInfo*/
     	UPDATE	BGAB_GASCBV01$corp_cd$
     	SET		FXT_INS_INFM_NOS = #fxt_ins_infm_nos#
     	WHERE	CHSS_NO = #chss_no#
     </update>
     
     <delete id="deleteBgabGascZ008ByExpire">
    	/*deleteBgabGascZ008ByExpire*/
    	DELETE FROM BGAB_GASCZ008$corp_cd$
    	WHERE ORGA_C IN(
    			SELECT XORG_ORGA_C FROM BGAB_GASCZ003$corp_cd$
				WHERE NVL(XORG_CLOS_D, '99999999') <![CDATA[<]]> CONVERT(NVARCHAR, getDate(), 112)	
    		)
    </delete>
    
    <delete id="deleteBgabGascZ011ByFileRemove" parameterClass="BgabGascZ011Dto">
    	/*deleteBgabGascZ011ByFileRemove*/
    	DELETE FROM BGAB_GASCZ011$corp_cd$
    	WHERE DOC_NO = #doc_no#
    </delete>
    
    <select id="selectCountXgascInfo" resultClass="String" parameterClass="BgabGascz006Dto">
	  	SELECT COUNT(XGAC_EMPNO)
	  	FROM BGAB_GASCZ006
	  	WHERE XGAC_EMPNO = #empno#
   </select>
    
</sqlMap>
